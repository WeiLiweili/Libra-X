{
  "name": "Libra-gamess interface",
  "tagline": "quantum chemistry, nonadiabatic dynamics, GAMESS, Quantum Espresso",
  "body": "# Libra-GAMESS_interface\r\n\r\n   This file introduces how to execute Libra-GAMESS_interface.\r\n\r\n0. Install Libra and GAMESS on your PC or server.\r\n   For installation, access the websites below:\r\n    Libra:  http://www.acsu.buffalo.edu/~alexeyak/libra/index.html\r\n   GAMESS:  http://www.msg.ameslab.gov/gamess/\r\n\r\n1. Create a working directory,say, /home/work . \r\n\r\n2. There, create input files(*.inp).(H2O.inp and 23waters.inp in \".../libra-gamess_interface/run\" are the simple examples.)\r\n   For more details about how to create that, \r\n   please see the website http://www.msg.ameslab.gov/gamess/GAMESS_Manual/input.pdf .\r\n   Here, Keep in mind 3 things.\r\n   A. Only semi-empirical methods have been connected to libra so far;\r\n      set GBASIS=MNDO, AM1, PM3, or RM1 in $BASIS section. \r\n   B. Set RUNTYP=GRADIENT in $CONTROL section.\r\n   C. Use cartesian coordinates in $DATA section like this:\r\n\r\n      Cn 1\r\n\r\n      C  6.000000 4.377921 -4.769170 -2.758971\r\n      C  6.000000 3.858116 -4.331728 -3.995136\r\n      C  6.000000 2.478331 -4.387937 -4.267327\r\n                           .\r\n                           .\r\n                           .\r\n   \r\n   * set blank line between \"Cn 1\" and 1st coordinate line.\r\n\r\n3. For convinience, copy run_gms.py in \".../libra-gamess_interface/run\" to the working place.\r\n\r\n4. Modify copied run_gms.py for calculation.\r\n   Concretely, set variables for GAMESS, Molecular Dynamics(MD), excited electron dynamics, and debugs.\r\n   See the input manual in \".../libra-gamess_interface/run\" to know more about the variables.\r\n\r\n5. copy elements.txt in \".../libra-gamess_interface/run\" to the working directory.\r\n\r\n6. Create \"res\" and \"sd_ham\" directories under the working place, where the results will be output.\r\n\r\n7. When the precedures above are finished, it is the time to execute this program.\r\n   Here, 2 types of execution can be used.\r\n   A. Only invoke \"python run_gms.py\" in the working place.\r\n   B. Use queuing system. submit_templ_gms.lsf or submit_templ_gms.slurm in \".../libra-gamess_interface/run\" are the simple examples for using this.\r\n      Modify the files following your queuing system.   \r\n   \r\n8. After the calculation finished, the results will be set in \"res\" directory.",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}